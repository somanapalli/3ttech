
20th december - 20th jan


java is beoming very essential knowledge

  
 what is java?
 
   java is object oriented programming language
   we have different programming languages are there 
   
     1.procedure oriented 
	 2.object oriented 
	 3.scripting oriented
	 4.modula oriented
	 
	 
python
.net
php....
   
   
  java got released in the year of 1995 

  almost 27 years completed

  still it is maintaining it's popularity 

  how it is possible?

   answer: because of java is maintaining unique features
   /charactersitics/buzzwords
   
   1.simple
   2.platform indepenedent
   3.architectural neutral
   4.portable
   5.object oriented
   6.robust
   7.interpreted
   8.high performance
   9.secured
   10.distributed
   11.dynamic
   12.mulithreaded
   
   

java developer
.net developer
php developer 
   
   
   goal ->to develop software/application
   
 what type of applications we have in the market?

 ->desktop applications
 ->distributed applications
 
   
  desktop application/standalone application:

it is an application in which machine
we instlled in that machine only we are able 
to consume the services.

the results of the desktop applications are 
not sharable


ex:
acroabatic reader,
antivirus,
mspaint,
calucator
 etc..
 link to access the notes:
 https://github.com/somanapalli/3ttech
   
 
distributed application/network based application:
````````````````````````````````````````````````````
it is also an applcation which we can able to access from any where 
make sure that machine should be connected to a proper internet.

ex: facebook, gmail, yahhoo. .. etc..
 
   
   the results of the distributed applications are sharable 
   across the globe.
   
   
why should we learn core java or significance of learning core java?


->using core java knowledge, we are able to develop standalone
  applications/desktop applications.

->using core java knowledge,we  are able to learn advaned java

->to learn high end tools like salesforce, pega,bigdata, mulesoft 
  we need core java knowledge
  
  
java got released in the year of 1995

 by jamesgosling and his team (14 members)
 
   he is the author 

from sunmicrosystem

   he releaed into three editions
   
   1.jse-java standard editions-core java
   
          we can develop standalone /desktop applications
		  
   2.jee-java enterprise editions-adv java
   
          we can develop enterprise/distributed applcations
		  using this we also can develop desktop applications
		  
		  
		  
   3.jme-java micro/mobile applications
   
         we can develop micro/mobile related applications 
		 
		   ex: android
		   
		   
if you are programmer

 -to devlop the software/application

 -we have to write the programs
 
prerequistes to write a java program?
````````````````````````````````````

c progam -> turbo c software -> 
cpp program -> turbo cpp software ->

java program -> jdk sofware 
  jdk -Java development kit
  
 1.download the jdk software
 2.install the software
 3.select the editor(notepade,notepad++,editplus,eclipse,myeclipse..)
 4.write the java program 
 5.save the java program (.java)
   note: extension always must be .java and that to 
   it must be in lower case letters.
 
 6.compile the java program 
 
 7.run/execute the java program 
 
 
 





from where we can download the jdk software?

 official website: www.oracle.com
 
 sunmicrosystem -organization 
 
 oracle purchase all copyrights of sunmicrosystem
 
 
  scjp ->sun certified  java programmer
  
  ocjp -> oracle certified java programmer
  
  
after software got installed how can we cross check whether it is 
installed suceesfuly or not?
 open command prompt 
 
 and pass the below command
 
 
 cmd:/>java -version
 
 java version "19.0.1" 2022-10-18
 Java(TM) SE Runtime Environment (build 19.0.1+10-21)
 Java HotSpot(TM) 64-Bit Server VM (build 19.0.1+10-21, mixed mode, sharing)


topics:
```````
->what is java
->list of features of java
->significance of learning core java
->types of applications
->history of java 
->download and install jdk software?
->prerequisites to write the java program
->different java editions 

   
   
structure of the java program:
````````````````````````````````

every java program should starts with by defining the class.


  class <classname>
  {
  
  
  }

ex:

  class Student
  {
  
  
  }


compile the java program:

for this open command prompt and give below command

 cmd:/> javac <filename>.java
 
 
 example:
 ``````````
 C:\Users\LENOVO>javac Demo.java
error: file not found: Demo.java
Usage: javac <options> <source files>
use --help for a list of possible options

C:\Users\LENOVO>e:

E:\>cd 3ttech

E:\3ttech>dir
 Volume in drive E is study
 Volume Serial Number is EC97-9253

 Directory of E:\3ttech

21-12-2022  10:07    <DIR>          .
21-12-2022  10:07             4,585 corejava_notes
21-12-2022  10:07                18 Demo.java
               2 File(s)          4,603 bytes
               1 Dir(s)  76,667,604,992 bytes free

E:\3ttech>javac Demo.java

E:\3ttech>


we have to execute/run the program

cmd:/> java <classname>

   note:
   every java program execution starts from main() only.
   
    public static void main(String[] args)
	{
	
	
	}
   
   
  without main() can we compile the java program?

   yes, we can compile
   
  without main() can we execute the java program?
  no, we can't because execution of the java program should always 
  starts from main() only.
  
  
  we are always write the logic inside the method(s) whether it is 
  user defined method or predefined method.
  
  
E:\3ttech>javac Demo.java

E:\3ttech>java Welcome
welcome to java sessions

E:\3ttech>

 
  
  
  
  
  
 why should we compile the java program?

 
  who will compile the java program?
  
   what is  java compiler?
   
   C:\Program Files\Java\jdk-19\bin
	
	
 where all the java tools are available like javac, java, javap, javadoc , javaw etc.

 
 when we compile the  java progarm what will happen?

 java compiler will check syntactical mistakes 

programmer follows correct syntaxes or not?

 
  if programmer follows everything syntactically it is good?
  
  java compiler will generate one .class file based on the class name
  
  .class file contains byte code, which is not human readable code.

  which can be understandable by java interpreter which is jvm 
  (java virtual machine)

  
   what will happen when we execute the java progarm?
   
   who will execute the java program?
   
     java interpretor (jvm) -> bin folder
	 
	 it will take .class file as an input and converts this byte code
	 into machine level code(binary code 0's and 1's)
	 
	 
	execute
	
	java Welcome
	
   
 q) is it possible to give both file name and class name are same?

  
   
jdk-

   it provides two environments
   
   1.developer environment -we can develop the java programs
   2.runtime environment- we can run the java applications 
   
jre
    -java runtime environment
	
    -it provides runtime environment.



jvm
   -java interpretor (jvm)
   -java virtual machine
   
  jdk = jre + jvm 
  
  
   
   zoom-> runtime environment
   
    myself -> jvm 
	
	
   COMPILATION VS EXECUTION 
   STRUCTURE OF THE JAVA PROGRAM 
   JDK VS JRE VS JVM 
   
   
   .JAVA 
      -> .CLASS FILE -> BYTE CODE
	  
	  JAVA INTERPRETOR (JVM ) - BYTE CODE -> MACHINE LEVEL CODE 
	  
 note:
java supports member variables and member methods


inside the clas if we declare variable s-> member vairables
inside the class if we define the methods:-> member methods

class names always unique
package(s)

 
JAVA IS OBJECT ORIENTED PROGRAMMING LANGUAGE
 
    ->since it follows oops principles
	
	
	inheritance
	polymoprhism
	abstraction 
	encapsulation 
	
 
 in java, to achieve the above 4 principles we are using 
 two concepts 
 
  1.class
  2.object
  
 
 
 class:
 ``````
 
 every java program should starts with 
 by defining the class.
 
 class is a collection 
 
   -variables 
   -& method(s)
   
   
 every java reserved keyowrd alwyas must be in 
 lower case.
 
 
 
 variable:
 ``````````
 
   variable is like a data container 
   
 
 definition: 
 purpose: to store the data
 syntax:
 
    <datatypename> <variablename> = <value>;
	
 
 String stname = "ramakrishna";
 int stid=100;
 double marks = 78.5;
 
    
	variable is the name which we are given to memory location .
	
	
	in java, while we are stroing any value inside an variable 
	we have to use datatype also.
	
what type of datatypes are available in java:

 majorly we do have 4 categories 



primitive datatypes.


1.integer

  -to store integer values
  
  byte
  short
  int
  long
  
  
  
  
2.charcter

   -to store single character informatin 
   
   -char
   
3.float
  -to store decimal values
  
  -float
  -double
  
  
4.boolean 

   -to store logical values either true/false.
   
   -boolean 
   
   
1.byte - 1 byte - 8 bits
2.short - 2 bytes - 16 bits
3.int - 4 bytes
4.long - 8 bytes

5.char - 2 bytes

6.float  -  4 bytes
7.double  - 8 bytes

8.boolean  - undefined by the sunmicrsosystem 




   every datatype has two things
   
   1.memory size
   2.range of the value
   
   

 byte range 
 
  byte -> 1 byte -> 8 bits 
  
  we have one formula 
  
  -2^n-1 to (2^n-1) - 1
  
  -2^7 to 2^7 - 1
  
  -128 to 127
  
    range of the byte datatype
	

 130
 
 byte b  = 130;
 
 
 short -> 2 bytes -> 16 bits
 
 -2^15 to 2^15 -1 
 
to store character data, it must be enclosed with in the 
single quotation. otherwise it gives compile time error.


float 
double

by default float type data can be considered as double type.

to specifiy any decimal value as float type, after the data 
specify f letter so that it can considered as float type.

difference between float and double?

 float - 4 bytes
 double -> 8 bytes

  3.454545
  5.34535345353534535335
  
 float can take upto 7 digits as precesion size where 
 as double can take upto 15 digits as precision size.
 
 
boolean category:
```````````````````
to store logical values either true or false.

all the primitive datatypes must be in lower case only.

  boolean b = True;
  
  true and false are the java reserved keywords 
  all the java reserved keywords must be in lower case .
  
 
example:
`````````
class Demo
{
	
	public static void main(String[] args)
	{
	
	  byte b = 127;
	  char c = 'a';
	  float f = 5.67656757656567576f;
	  double d = 5.6767757575775646456;
	  
	  boolean e = false;
	  
	  int st$id2=100;
	  
	  
	  
	  System.out.println(b);
	  System.out.println(c);
	  System.out.println(f);
	  System.out.println(d);
	  System.out.println(e);
	  
	  System.out.println(st$id2);
	}

}
	


 rules to declare the variable name:
 ````````````````````````````````````
 

1.variable name should always starts with alphabet 
  it should not start with numeric 

2.no special characters are allowed except $ and _(underscore)  

3.we are not allowed to use varaible names as java reserved words.

  
  

4.variable names are case sensitive.

5.blank spaces are not allowed while we are declaring the variables. 
 
  
examples:
`````````
    //invalid : int 5stid=100;
	//valid : int st$id=100;
	//valid: int st_id=100;
	//invalid: int st*id=100
	
	//invalid : int int = 100;
	//invalid: int st id=100;
	
 
 
 method:
 method is the place where we are writing the logic to perfrom 
 some operation based on the requirement?
 syntax
  
  <returntype> <methodname>()
  {
  //logic
  }
  
  
q:
define the method which accepts two integer parameters and returns their sum?


              int getSum(int x, int y)
			  {
			    returns x+y;
			  }
 
 
 
q:
define the method which accepts one integer parameter and String paramteer and display their values?


                      void getDetails(int x, String y)
					  {
					    System.out.println(x);
						System.out.println(y);
					  }
 
 q:
define the method which accepts student information like 
student id, studentname and student marks and display their 
details?


             void getStudentDetails(int stid, String stname,double stmarks)
			 {
			    System.out.println("student id: " + stid);
				System.out.println("student name:" + stname);
				System.out.println("student marks: " + stmarks);
				
			 }


q:
define the method which accepts first name and last name and returns their full name?


              String getFullName(String firstName,String lastName)
			  {
			  return firstName+lastName;
			  }


q:
define the method which accepts radious as input parameter 
and returns area of the circle?

                area of the circle formular 
				A = PI * r * r
				
				
		            double getCircleArea(double radious)
                    {
                      return 3.14*radious*radious;
                    }					  

q:
define the method which accepts student marks subject wise and return their total marks?
   
             telugu,hindhi,english

			  
			  double getTotalMarks(double telugu,double hindhi,double english)
			  {
			    return telugu+hindhi+english;
			  }
			  
			  
q:
define the method which accepts currency as input parameter and returns productname such as soap?

                      String getProduct(double currency)
					  {
					    return "santoor";
					  }
     
 single character
 String -group of character
 
	

class is a collection of 

   -variables
   -& methods


example:
``````````
class Student
{

  //variables
  
 static int stid =100;
 static String stname="rama";
  
  //methods
  public static void displayDetails()
  {
	   System.out.println("student id: " + stid);
	   System.out.println("student name: " + stname);
  }

   public static void main(String[] args)
   {
	   //call the methods
	   displayDetails();
   }

}

   java is object oriented programming language
   
    -since it follows oops principles
	
	  inheritance
	  polymoprhism
	  abstraction
	  encapsulation
	  
	  to achieve above principles in java, we are using 
	  two concepts
	  
	  1.class
	  2.object
	  
class:
 class is a collection of vairables
 and methods into a single unit. 
 
object:
``````

object is an instance of a class. 

 whenever we define the class, memory spaces 
 will not be created for the properties of the class.
  
 instance:
 allocating sufficient amount of memory space for the instance 
 proeprties of the class.
 
 
syntax for object creation:
```````````````````````````
<classname> <objectname> = new <classname>();


Student obj = new Student();

  Student -> name of the class
  obj -> name of the object
   = -> assignment operator 
   
   new -> dynamic memory allocation operator
   Student() -> constructor
   
   
example:
`````````
class Student
{

  //variables
  
 int stid =100;
  String stname="rama";
  
  //methods
  public void displayDetails()
  {
	  System.out.println("===================");
	   System.out.println("student id: " + stid);
	   System.out.println("student name: " + stname);
  }

   public static void main(String[] args)
   {
	   //create the object for Student class
	   
	   Student obj  = new Student();
	   
	   System.out.println(obj.stid);
	   System.out.println(obj.stname);
	   
	   //call the method
	   
	   obj.displayDetails();
	   
	   
   }

}


for a single class how many object(S) we can create?

 ansewr:
 as many as we want based on the requirement
 
 Student obj1 = new Student();
 Student obj2 = new Student();
 
 objct name is always unique.
 
 
why we need to create multiple objects for a single class?

college

  1000 students
  
     to store 1000 students information /data
	 how many objects are required?
	 
	   every object is having a specific student information 
	   
	   1000 objects
	   
<classname> <objectname> = new <classname>();


using object name, we are able to access the 
variables and as well as methods.

using object, how can we update the values?

example:
`````````
class Student
{

  //variables
  
 int stid =100;
  String stname="rama";
  
  //methods
  public void displayDetails()
  {
	  System.out.println("===================");
	   System.out.println("student id: " + stid);
	   System.out.println("student name: " + stname);
  }

   public static void main(String[] args)
   {
	   //create the object for Student class
	   
	   Student obj  = new Student();
	   
	   //updating the values using object name
	   obj.stid=101;
	   obj.stname="sridevi";
	   
	   //call the methods
	   obj.displayDetails();
   
   }
}





example:
`````````
class Student
{

  //variables
  
 int stid =100;
  String stname="rama";
  
  //methods
  public void displayDetails()
  {
	  System.out.println("===================");
	   System.out.println("student id: " + stid);
	   System.out.println("student name: " + stname);
  }

   public static void main(String[] args)
   {
	   //create the object for Student class
	   
	   Student obj1  = new Student();
	   
	   Student obj2 = new Student();
	   Student obj3 = new Student();
	   
	   System.out.println(obj1);
	   System.out.println(obj2);
	   System.out.println(obj3);
    
   }

}

note:
every new object is having a specific new address

non static (instance) vs static:
```````````````````````````````````
 int a;//non static variable or instance variable
 
 static int a;//static variable
 
 how can we make non static proeprty as static 
 property?
 
   by using one java reserved keyword 'static'.
   
   //non static or instance method 
  void m1()
  {
   //logic
  }
  
  //static method 
  static void m2()
  {
  //static area
    //logic
  }
  

the area which belongs to non static method is known as 
instance area or non-static area

the area which belongs to static method is known as 
static area .


note:
from the static area, if we want to access
nonstatic properties we can access using 
object name.

from the static area and non-static area,  if we want to access  
static properties we can access in following ways

1.we can access directly 
2.we can access using classname 
3.we can access using object name (not recommended)



when can you make a normal proeprty as 
static property?

 if a property is common to multiple objects
 
 once we declare any property as static , 
 memory wil be created only once at the time 
 class loading 
 
 
example:
``````
class Student
{

  //instance variables
  
 int stid =100;
  String stname="rama";
  static String collegeName="jntu";
  
  
  //instance methods
  public void displayDetails()
  {
	  //instance area 
	   System.out.println("===================");
	   System.out.println("student id: " + stid);
	   System.out.println("student name: " + stname);
	   System.out.println("college name: " + collegeName);
	   System.out.println("collegeName:" + Student.collegeName);
  }

//static method 
   public static void main(String[] args)
   {
	   //static area 
	   //create the object for Student class
	   
	   Student obj1  = new Student();
	   
	   System.out.println(obj1.stid);
	   System.out.println(obj1.stname);
	   //call the non static method 
	   
	   obj1.displayDetails();
	   
	   //accessing static property from the static area
	   
	   System.out.println(collegeName);
	   System.out.println(Student.collegeName);
	  
	   
   }

}


do one program 
on top of instane vs static?

  

constructor:
```````````
 constructor is a special member method 
 
 1.it must be similar to the class name 
 
 purpose: to initilize the object.
 

ide(integrated development environment)

-eclipse, myeclipse, netbeans, intellij, etc.. 

official website to download eclipse ide:

https://www.eclipse.org/downloads/packages/release/kepler/sr1/eclipse-ide-java-developers




constructor:

 purpose: to initialize the object 
 
 object contains data
 
 to initialize the data.
 
 
int a ;//variable declaration 

a=100;//assigning the value 

int a = 100;//variable initilization 




without constructors:
````````````````````````

public class Test1 {
	
	int a,b;
	
	public void setValues()
	{
		a=100;
		b=200;
	}
	public void display()
	{
		System.out.println(a);
		System.out.println(b);
	}

	
	public static void main(String[] args)
	{
		//create the object
		Test1 obj = new Test1();
		
		//call the setValues()
		
		obj.setValues();
		//call the methods
		
		obj.display();
		
	}
}

in case of normal methods, explictly we have to call those 
otherwise we will not get desired values.

1.constructor is a special member method 
2.it must be similar to class name.
3.constructor should not return any thing even void also. 
4.constructor should not be static
5.constructor should not be inherited.


in case of constructor, explictly we no need to call 
the constructor 

when constructor will be invoked?
whenever we create the object 

how many no.of times constructor will be invoked?
answer:
  how many no.of times you create the object, those many no.of times
  corresponding constrcutor will be invoked.
  
  
example:
`````````

public class Test1 {
	
	int a,b;
	
	//constructor
	public Test1()
	{
	  a=100;
	  b=200;
	}
	
	public void display()
	{
		System.out.println(a);
		System.out.println(b);
	}

	
	public static void main(String[] args)
	{
		//create the object
		Test1 obj = new Test1();
		//call the diplay method 
		obj.display();
		
	}
}

types of constructor:
``````````````````````
1.default constructor 

  ->constructor whihc doesn't takes any parameters 
  
  again this is of two types 
  
   1.user defined default constructor 
       ->this is for initializing our own values
   2.system defined default constructor 
       ->this is for initializing default values based on the datatype.
	   
	   
2.parameterized constructor:

   ->constructor which takes parameters 
   
   

note:
in case of default constructor first default values 
will be initlized later those values will be replaced with our 
own values.

note:
in case of parameterized constructor, directly our own values will 
be initlized while you creating the object. 

q:
can we define both default and parmaterized cosntructor 
in a class?
example on parameterized constructor:


public class Test1 {

	//class level variables 
	int a, b;
  
	
	//parameterized constructor
	public Test1(int x, int y)
	{
		a=x;
		b=y;
	}
	

	public void display() {
		System.out.println(a);
		System.out.println(b);
	}

	public static void main(String[] args) {
		// create the object
		Test1 obj = new Test1(100,200);
		// call the diplay method
		obj.display();

	}
}


example on both default and parameterized constructor:
```````````````````````````````````````````````````````

public class Test1 {

	//class level variables 
	int a, b;
  
	//default constructor 
	public Test1()
	{
		a=1000;
		b=2000;
	}
	//parameterized constructor
	public Test1(int x, int y)
	{
		a=x;
		b=y;
	}
	

	public void display() {
		System.out.println(a);
		System.out.println(b);
	}

	public static void main(String[] args) {
		// create the object
		Test1 obj = new Test1(100,200);
		// call the diplay method
		obj.display();
		
		//create the object using default constructor
		 Test1 obj1 = new Test1();
		 obj1.display();
	
	}
}

this keyword in java:
``````````````````````
'this' is the java reserved keyword using for two 
purposes.

1.whenever class level variables and method level 
parameters are same 
to differentiate those we will use this keyword

example:
```````

public class Test1 {

	//class level variables 
	int a, b;
	//parameterized constructor
	public Test1(int a, int b)
	{
		this.a=a;
		this.b=b;
	}
	

	public void display() {
		System.out.println(this.a);
		System.out.println(this.b);
	}

	public static void main(String[] args) {
		// create the object
		Test1 obj = new Test1(100,200);
		// call the diplay method
		obj.display();

	}
}


2.even though we have multiple constructors are there in our application to execute all those constructors by creating 
single object it is possible 

  ->constructor chaining 
  
  syntax:
     
	  this() -> it is for caling current class default constructor 
	  
	  this(..) -> it is for calling current class parameterized constructor 
	  
	  
example:
`````````

public class Test1 {

	
	//parameterized constructor
	public Test1(int a, int b)
	{
		
		System.out.println("parameterized constructor");
	}
	
	//default constructor
	public Test1()
	{
		//call the parameterized constructor
		this(100,200);
		System.out.println("default constructor");
	}
	

	

	public static void main(String[] args) {
		// create the object
		Test1 obj = new Test1();
		
	}
}


note:
constructor call must be the first statement inside a constructor 
otherwise we will get compile time error. 


 ->eclipse ide
 ->constructor 
 ->types of constructor 
 ->this keyword
 

			  
 